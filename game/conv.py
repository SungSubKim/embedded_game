from PIL import Image
def update_area(x,y,image_name,data):
    # im = Image.open(input("image name: "))
    im = Image.open(image_name)
    width, height = im.size[0],im.size[1]
    #print(f'{width} {height}')
    pix = im.load()
    # data= [0 for _ in range(128)]
    # x, y = 16,128-16
    for row in range(height):
        for col in range(width):
            if sum(pix[(col,row)])/3 > 128:
                data[y+row] |= 2**(64-1-(x+col))
        # print(' ')
    # for x in range
    # print(data)
    # for row in range(height):
    #     for col in range(width):
    #         if (data[y+row]&2**(64-1-(x+col)))>0:
    #             print('O',end='')
    #         else:
    #             print(' ',end='')
    #     print(' ')
    # return data

# update_area()
def update_char(font_data,x,y,data):
    for row in range(8):
        data[y+row] |= font_data[row] << (64-1-x-6)

font = [ #96,3
   [0x00,0x00,0x00], #  
   [0x00,0x2e,0x00], # !
   [0x06,0x00,0x06], # "
   [0x3e,0x14,0x3e], # #
   [0x0c,0x36,0x18], # $
   [0x32,0x08,0x26], # %
   [0x14,0x2a,0x34], # &
   [0x00,0x06,0x00], # '
   [0x00,0x1c,0x22], # (
   [0x22,0x1c,0x00], # )
   [0x14,0x08,0x14], # *
   [0x08,0x1c,0x08], # +
   [0x40,0x60,0x00], # ,
   [0x08,0x08,0x08], # -
   [0x00,0x20,0x00], # .
   [0x60,0x1c,0x02], # /
   [0x3e,0x22,0x3e], # 0
   [0x24,0x3e,0x20], # 1
   [0x32,0x2a,0x26], # 2
   [0x22,0x2a,0x3e], # 3
   [0x0e,0x08,0x3e], # 4
   [0x2e,0x2a,0x3a], # 5
   [0x3e,0x2a,0x3a], # 6
   [0x02,0x3a,0x06], # 7
   [0x3e,0x2a,0x3e], # 8
   [0x2e,0x2a,0x3e], # 9
   [0x00,0x14,0x00], # :
   [0x40,0x64,0x00], # ;
   [0x08,0x14,0x22], # <
   [0x14,0x14,0x14], # =
   [0x22,0x14,0x08], # >
   [0x02,0x2a,0x06], # ?
   [0x3e,0x22,0x2e], # @
   [0x3e,0x0a,0x3e], # A
   [0x3e,0x2a,0x36], # B
   [0x3e,0x22,0x22], # C
   [0x3e,0x22,0x1c], # D
   [0x3e,0x2a,0x22], # E
   [0x3e,0x0a,0x02], # F
   [0x3e,0x22,0x3a], # G
   [0x3e,0x08,0x3e], # H
   [0x22,0x3e,0x22], # I
   [0x30,0x20,0x3e], # J
   [0x3e,0x08,0x36], # K
   [0x3e,0x20,0x20], # L
   [0x3e,0x04,0x3e], # M
   [0x3c,0x08,0x1e], # N
   [0x3e,0x22,0x3e], # O
   [0x3e,0x0a,0x0e], # P
   [0x3e,0x22,0x7e], # Q
   [0x3e,0x0a,0x34], # R
   [0x2e,0x2a,0x3a], # S
   [0x02,0x3e,0x02], # T
   [0x3e,0x20,0x3e], # U
   [0x1e,0x20,0x1e], # V
   [0x3e,0x10,0x3e], # W
   [0x36,0x08,0x36], # X
   [0x06,0x38,0x06], # Y
   [0x32,0x2a,0x26], # Z
   [0x00,0x3e,0x22], # [
   [0x02,0x1c,0x60], # "\"
   [0x22,0x3e,0x00], # ]
   [0x04,0x02,0x04], # ^
   [0x40,0x40,0x40], # _
   [0x00,0x02,0x00], # `
   [0x3e,0x0a,0x3e], # a
   [0x3e,0x2a,0x36], # b
   [0x3e,0x22,0x22], # c
   [0x3e,0x22,0x1c], # d
   [0x3e,0x2a,0x22], # e
   [0x3e,0x0a,0x02], # f
   [0x3e,0x22,0x3a], # g
   [0x3e,0x08,0x3e], # h
   [0x22,0x3e,0x22], # i
   [0x30,0x20,0x3e], # j
   [0x3e,0x08,0x36], # k
   [0x3e,0x20,0x20], # l
   [0x3e,0x04,0x3e], # m
   [0x3c,0x08,0x1e], # n
   [0x3e,0x22,0x3e], # o
   [0x3e,0x0a,0x0e], # p
   [0x3e,0x22,0x7e], # q
   [0x3e,0x0a,0x34], # r
   [0x2e,0x2a,0x3a], # s
   [0x02,0x3e,0x02], # t
   [0x3e,0x20,0x3e], # u
   [0x1e,0x20,0x1e], # v
   [0x3e,0x10,0x3e], # w
   [0x36,0x08,0x36], # x
   [0x06,0x38,0x06], # y
   [0x32,0x2a,0x26], # z
   [0x08,0x3e,0x22], # {
   [0x00,0x7e,0x00], # |
   [0x22,0x3e,0x08], # }
   [0x02,0x06,0x04], # ~
   [0x00,0x00,0x00]
]#
def font_rotate():
    for idx,fo in enumerate(font):
        res=[]
        for i in range(8):
            tmp =0
            for j in range(3):
                tmp|=(fo[j]%2)<<(2-j)
                fo[j] = fo[j]>>1
            res.append(tmp)
        font[idx]=res
def write_char(c, x, y,data) :
    c = ord(c)
    if c < ord(' '):
        c = ord(' ')
    update_char(font[c-ord(' ')],x,y,data)

def write_str(strA,x,y,data):
    cnt=0
    while cnt<len(strA):
        write_char(strA[cnt],x,y,data)
        cnt+=1
        x += 3+1